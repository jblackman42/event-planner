<div id="review-days-container">
    <div id="review-days">
        <div class="review-header">
            <h1>Recurring Events</h1>
            <button class="close-button" onclick="reviewHide()"><i class="material-icons">close</i></button>
        </div>
        <div class="days">
            <h2 id="review-event-title"></h2>
            <ol id="days-list">
            </ol>
        </div>
        <!-- <p style="text-align: center">Warning: 10 Events will be created</p> -->
        <div class="btn-container">
            <button class="btn cancel" onclick="reviewHide();patternShow();">Cancel</button>
            <button id="review-confirm-btn" class="btn" onclick="reviewHide()">Confirm 0 Events</button>
        </div>
    </div>
</div>
<script>
    const reviewContainerDOM = document.querySelector('#review-days-container');

    const eventTitleDOM = document.getElementById('review-event-title');
    const daysListDOM = document.getElementById('days-list');
    const reviewConfirmBtnDOM = document.getElementById('review-confirm-btn');

    const loadDaysList = () => {
        const daysListHTML = days.map(day => {
            let AMPM = 'AM';
            let hour = day.split('T')[1].split(':')[0]
            const minutes = day.split('T')[1].split(':')[1]
            if (hour >= 12 && hour < 24) AMPM = 'PM'
            if (hour > 12) hour -= 12

            const eventLength = new Date(endDateDOM.value).getTime() - new Date(startDateDOM.value).getTime();

            let endAMPM = 'AM'
            let endHours = parseInt(hour) + Math.floor(eventLength / 3600000);
            let endMinutes = (parseInt(minutes) + Math.floor(eventLength / 60000) - (Math.floor(eventLength / 3600000) * 60));
            if (endMinutes >= 60) {
                endHours += Math.floor(endMinutes / 60);
                endMinutes -= 60 * Math.floor(endMinutes / 60);
            }
            console.log(endHours)
            console.log(eventLength)
            if (endHours >= 12 && endHours < 24) endAMPM = 'PM';
            if (endHours > 12) endHours -= 12;
            return `<li>${new Date(day).toDateString()} @ ${hour}:${minutes} ${AMPM} - ${endHours.toString().padStart(2, '0')}:${endMinutes.toString().padStart(2,'0')} ${endAMPM}</li>`
        }).join('')
        daysListDOM.innerHTML = daysListHTML;
        eventTitleDOM.innerText = eventNameDOM.value;
        reviewConfirmBtnDOM.innerText = `Confirm ${days.length} Events`
    }

    const reviewHide = () => {
        reviewContainerDOM.style.display = 'none';
        reviewContainerDOM.style.visibility = 'hidden';
    }
    const reviewShow = () => {
        reviewContainerDOM.style.display = 'grid';
        reviewContainerDOM.style.visibility = 'visible';

        loadDaysList();
    }

    document.addEventListener('keydown', (e) => {
        if (e.key == "Escape") {
            reviewHide();
        }
    })
    document.onclick = function(e){
        if(e.target.id == 'review-days-container'){
            reviewHide();
        }
        if(e.target.id == 'review-days'){
            reviewShow();
        }
    };
</script>